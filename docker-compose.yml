version: '3.8'

services:
  vin-scanner-api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: vin-scanner-server
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_PATH=/data/vehicles.db
    volumes:
      - vin_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - vin-network

  nginx:
    image: nginx:alpine
    container_name: vin-scanner-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - certbot_certs:/etc/letsencrypt
      - certbot_webroot:/var/www/certbot
    depends_on:
      - vin-scanner-api
    restart: unless-stopped
    networks:
      - vin-network

  certbot:
    image: certbot/certbot
    container_name: vin-scanner-certbot
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_webroot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@example.com --agree-tos --no-eff-email -d visiontechadas.duckdns.org
    depends_on:
      - nginx

volumes:
  vin_data:
    driver: local
  certbot_certs:
    driver: local
  certbot_webroot:
    driver: local

networks:
  vin-network:
    driver: bridge